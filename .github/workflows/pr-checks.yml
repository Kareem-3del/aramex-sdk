name: PR Checks

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  validate:
    name: Validate PR
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Run build
        run: npm run build

      - name: Check package size
        run: |
          npm pack
          SIZE=$(ls -lh *.tgz | awk '{print $5}')
          echo "Package size: $SIZE"
          rm *.tgz

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Security audit
        run: npm audit --audit-level=moderate

  label-pr:
    name: Label PR
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Auto-label PR
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = context.issue.number;
            const { data: files } = await github.rest.pulls.listFiles({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: prNumber
            });

            const labels = new Set();

            // Check file types
            files.forEach(file => {
              if (file.filename.includes('test') || file.filename.includes('spec')) {
                labels.add('tests');
              }
              if (file.filename.includes('.github/workflows')) {
                labels.add('ci-cd');
              }
              if (file.filename === 'package.json' || file.filename === 'package-lock.json') {
                labels.add('dependencies');
              }
              if (file.filename.includes('README') || file.filename.includes('.md')) {
                labels.add('documentation');
              }
              if (file.filename.includes('src/')) {
                labels.add('code');
              }
            });

            // Add labels if any were determined
            if (labels.size > 0) {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                labels: Array.from(labels)
              });
            }
